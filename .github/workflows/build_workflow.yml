name: CI/CD Build Workflow

on:
    push:
        branches: [master]

    pull_request:
        branches: [master]

    workflow_dispatch:
        inputs:
            logLevel:
                description: "Log level"
                required: true
                default: "warning"
            tags:
                description: "Test scenario tags"

jobs:
    pre-commit-hooks:
        runs-on: ubuntu-latest
        timeout-minutes: 2
        steps:
            - name: Checkout Code Repository
              uses: actions/checkout@v2

            - name: Set up Python 3.8
              uses: actions/setup-python@v2
              with:
                  python-version: 3.8

            # Run all pre-commit hooks on all the files.
            # Getting only staged files can be tricky in case a new PR is opened
            # since the action is run on a branch in detached head state
            - name: Install and Run Pre-commit
              uses: pre-commit/action@v2.0.0

    build:
        runs-on: ubuntu-latest
        defaults:
            run:
                shell: bash -l {0}
        timeout-minutes: 5
        steps:
            - uses: actions/checkout@v2

            - name: Set up Python
              uses: actions/setup-python@v2
              with:
                  python-version: 3.8

            - name: Run Tests
              run: |
                  pytest

            - name: Upload Coverage Report
              uses: codecov/codecov-action@v1
              with:
                  file: "coverage.xml"
                  fail_ci_if_error: true

    publish-docs:
        if: github.event_name == 'push'
        needs: [pre-commit-hooks, build]
        runs-on: ubuntu-latest
        defaults:
            run:
                shell: bash -l {0}
        timeout-minutes: 5
        steps:
            - uses: actions/checkout@v2
              with:
                  persist-credentials: false
                  fetch-depth: 0

            - name: Set up Python
              uses: actions/setup-python@v2
              with:
                  python-version: 3.7

            - name: Cache pip
              uses: actions/cache@v2
              with:
                  # This path is specific to Ubuntu
                  path: ~/.cache/pip
                  # Look to see if there is a cache hit for the corresponding requirements file
                  key: ${{ runner.os }}-pip-publish-docs
                  restore-keys: |
                      ${{ runner.os }}-pip-
                      ${{ runner.os }}-
            - name: Install Dependencies
              run: |
                  pip install sphinx==3.5.1 sphinx_rtd_theme==0.5.1 sphinx-multiversion==0.2.4
            - name: Build Sphinx Docs
              run: |
                  cd docs
                  sphinx-multiversion source _build/html
            - name: Copy Docs and Commit
              run: |
                  # gh-pages branch must already exist
                  git clone https://github.com/E3SM-Project/zstash.git --branch gh-pages --single-branch gh-pages
                  cd gh-pages
                  rm -r *
                  touch .nojekyll

                  # Add index.html to point to `master` branch automatically
                  printf '<meta http-equiv="refresh" content="0; url=./_build/html/master/index.html" />' >> index.html
                  cp -r ../docs/_build .

                  git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
                  git config --local user.name "github-actions[bot]"

                  # The below command will fail if no changes were present, so we ignore it
                  git add .
                  git commit -m "Update documentation" -a || true

            - name: Push Changes
              uses: ad-m/github-push-action@master
              with:
                  branch: gh-pages
                  directory: gh-pages
                  github_token: ${{ secrets.GITHUB_TOKEN }}
                  force: true
